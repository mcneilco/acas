name: Docker Image CI

on:
  push:
    branches: [ release/* ]
  create:
    tags: "**"
jobs:
  acas:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}-oss
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Checkout acasclient
        uses: actions/checkout@v3
        with:
          repository: acasclient
          path: acasclient
        # Setup which version of Python to use
      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build
      - name: Create docker bob
        run: bash docker_bob_setup.sh
      - name: Set Up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
        # Display the Python version being used
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        # Install the package using the setup.py
      - name: Install acasclient and unittest
        run: |
          python -m pip install --upgrade pip
          pip install unittest
      - name: Install bob credentials
        run: |
          mkdir ~/.acas
          echo "[default]" >> ~/.acas/credentials
          echo "username=bob" >> ~/.acas/credentials
          echo "password=secret" >> ~/.acas/credentials
          echo "url=http://localhost:3000" >> ~/.acas/credentials
      - name: Run tests
        run: python -m unittest discover -s ./acasclient -p "test_*.py"
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

