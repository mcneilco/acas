########################################################################
###          ACAS Configuration Properties    		                 ###
########################################################################


# How to read this file:
# SETTING-TYPE:
#	PLUMBING: Represents settings about Host names, ports, database names...etc
#  	BEHAVIOR: Represents settings that change the behavior of ACAS (Authentication, Allow protocol creation in SEL...etc.)
#  ON-THE-FLY:
#  	Settings marked as true in "ON-THE-FLY" do not require a server reboot
# OPTIONAL:
#	Settings marked as true in "OPTIONAL" are not required
# DEFAULT:
#	Optional Settings will have a default

# Note to developers adding new config values:
# The first part of the name, which is always "client" or "server", is used to filter which options are sent to
# the web client. Do not name config values starting with "client" unless they are safe for public viewing.
# To access a config variable from the client, e.g. client.deployMode then use window.conf.deployMode
# For the server, first config = require '../conf/compiled/conf.js'
# then, for server.rscript, use: config.all.server.rscript

# Migration notes
# ACAS 1.3 -> 1.5
# New required configuration additions with default values:
# client.datafiles.downloadurl.prefix=/dataFiles/
# client.roles.htsAdmin=admin
# client.browser.enableSearchAll=true
# New optional configuration additions:
# client.service.spotfire.host=${conf.acas.api.spotfire}
# client.service.spotfire.path=${conf.acas.api.spotfirepath}
# server.service.external.inventory.database.host=${conf.acas.api.inventory.database.host}
# server.service.external.inventory.database.port=${conf.acas.api.inventory.database.port}
# server.service.external.inventory.database.name=${conf.acas.api.inventory.database.name}
# server.service.external.inventory.database.username=${conf.acas.api.inventory.database.username}
# server.service.external.inventory.database.password=${conf.acas.api.inventory.database.password}

# Migration notes
# ACAS 1.2 -> 1.3
# name changes:
# client.require.getUserLink -> server.roologin.getUserLink
# client.require.changeLink -> server.roologin.changeLink
# client.require.resetLink -> server.roologin.resetLink
# client.require.loginLink -> server.roologin.loginLink
# New required configuration additions with default values
# client.roologin.showpasswordchange=false
# client.moduleMenus.summaryStats=true
# client.leavePageMessage=There are no unsaved changes.
# logging.usemongo=false
# logging.logtoconsole=true
# server.security.authstrategy=database
# client.service.control.tolerance.percentage=0.01
# New optional configuration additions, formerly called client.moduleMenus.headerName
# client.moduleMenus.logoText=ACAS
# client.moduleMenus.homePageMessage=Welcome to ACAS
# client.moduleMenus.copyrightMessage=&copy; John McNeil & Company 2012-2016
# server.service.persistence.filePath=${ACAS_HOME}/${server.datafiles.relative_path}
# server.service.persistence.fileUrl=http://${server.nodeapi.path}/uploads
# client.service.result.viewer.experimentName.invalidCharacters
# New for some installs: client.service.result.viewer.experimentNameColumn=EXPERIMENT_NAME

# Migration notes
# ACAS 1.3 -> 1.4
# New required configuration additions with default values
# client.service.rapache.use.ssl=${client.use.ssl}


###########################################################################
# A. ACAS Communication
###########################################################################

# Host that the client is running on.  It is recommended that you use the fully qualified domain name
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		FALSE
# DEFAULT:		NA
#
# Example: client.host=host5.labsynch.com
#
client.host=acas

# Port that the client is running on.
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		FALSE
# DEFAULT:		NA
#
# Example: client.port=3000
#
client.port=3000


###########################################################################
# B. Database Communication
###########################################################################

# Node API port
#
# SETTING-TYPE: PLUMBING
# ON-THE-FLY:
# OPTIONAL:     FALSE
# DEFAULT:      N/A
#
# EXAMPLE:     nodeapi.port=3001
# NOTE:        nodeapi.port must be different than client.port. It should be blocked by the server's firewall
#
server.nodeapi.port=3001
server.nodeapi.path=http://${client.host}:${server.nodeapi.port}

client.service.persistence.path=acas/api/v1
client.service.persistence.host=tomcat
client.service.persistence.port=8080
client.service.persistence.fullpath=http://${client.service.persistence.host}:${client.service.persistence.port}/${client.service.persistence.path}/


###########################################################################
# C. File Storage Communication
###########################################################################

# If customer needs to download from /dataFiles without login, set the following option to true
server.datafiles.without.login=false

# Required file path options
# specify relative to ACAS_HOME without leading slash
server.datafiles.relative_path=privateUploads
server.tempfiles.relative_path=privateTempFiles

# prefix for the client to prepend the fileValues to allow a user to download
client.datafiles.downloadurl.prefix=/dataFiles/

# Is used to know location on server when sending from R to tomcat on separate server
# Normally {$ACAS_HOME}/${server.datafiles.relative_path}
server.service.persistence.filePath=/home/runner/build/privateUploads
server.service.persistence.fileUrl=http://${client.host}:${server.nodeapi.port}/uploads


###########################################################################
# E. Communication with rApache
###########################################################################

client.use.ssl=false
server.ssl.key.file.path=../certs/server.key
server.ssl.cert.file.path=../certs/server.crt
server.ssl.cert.authority.file.path=../certs/ca.crt
server.ssl.cert.passphrase=selfCertForACASServer

client.service.rapache.port=1080
server.rapache.listen=*
#todo not in codebase 6/2015
client.service.rapache.use.ssl=${client.use.ssl}
client.service.rapache.host=rservices
client.service.rapache.path=r-services-api
client.service.rapache.fullpath=http://${client.service.rapache.host}:${client.service.rapache.port}/${client.service.rapache.path}/


###########################################################################
#  ACAS SAR Values
###########################################################################

# Properties requiring aggregation on geometric mean
server.sar.geomMean=[Ki,Kd,pH]

# Title of leftmost column when no search string is entered
# e.g. for Chanda should be "Gene ID"
server.sar.defaultTitle ="Tested Entity Information"

#options are bestLabel and ReferenceCode
server.sar.csvLabel=bestLabel

# options are ignoreOperators or includeOperators
client.sar.sorting = includeOperators

# url to fetch structure images from
client.service.external.structure.url=http://tomcat:8080/cmpdreg/structureimage/lot/

# url to lot details
client.service.external.lotDetails.url=/cmpdreg/#lot/

################################
# Uncategorized
################################

# If there are multiple instances running on a single server, it is recommended that each instances runs on a
# different deploy mode
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
# Example: client.deployMode=Dev
#
client.deployMode=${env.APP_NAME}

# Settings for the logging service
#
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
# Example: server.logging.database=acas_logging_Dev
#
logging.database=acas_logging_${client.deployMode}

# Settings for the logging service
# Specify if the winston logger should use mongodb to store logs.
# If this is false, logs will be saved to a flat file
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
#
logging.usemongo=false

# Settings for the logging service
# Specify if the winston logger should use mongodb to store logs.
# If this is false, logs will be saved to a flat file
# SETTING-TYPE:	PLUMBING
# ON-THE-FLY:	FALSE
# OPTIONAL:		TRUE
# DEFAULT:		NA
#
#
logging.logtoconsole=true

# todo add options for using flat file instead of mongo
# printing out to console.log

server.database.name=${env.ACAS_DB_NAME}
server.database.username=${env.ACAS_USERNAME}
server.database.password=${env.ACAS_PASSWORD}
server.log.level=DEBUG

server.log.path=/home/runner/logs

#config for whether project is required
client.include.project=FALSE
# config for whether project attribute is saved as part of an experiment
client.save.project=TRUE
client.protocol.save.project=true
client.path=
client.fullpath=http://${client.host}:${client.port}

# Query tool settings
client.service.result.viewer.displayName=Data Viewer
client.service.result.viewer.configuredViewers=DataViewer
client.service.result.viewer.defaultViewer=DataViewer
client.service.result.viewer.liveDesign.baseUrl=
client.service.result.viewer.liveDesign.username=
client.service.result.viewer.liveDesign.password=
client.service.result.viewer.liveDesign.database.name=
client.service.result.viewer.liveDesign.database.username=
client.service.result.viewer.liveDesign.database.password=
client.service.result.viewer.liveDesign.database.hostname=
client.service.result.viewer.liveDesign.database.port=
client.service.result.viewer.simpleSAR.baseUrl=
client.service.result.viewer.seurat.protocolPrefix=http://${client.service.persistence.host}:9080/seurat/runseurat?cmd=newjob&AssayName=
client.service.result.viewer.seurat.experimentPrefix=&AssayProtocol=
client.service.result.viewer.protocolPrefix=http://${client.service.persistence.host}:9080/seurat/runseurat?cmd=newjob&AssayName=
client.service.result.viewer.experimentPrefix=&AssayProtocol=

client.service.result.viewer.experimentNameColumn=EXPERIMENT_NAME
client.service.result.viewer.experimentName.invalidCharacters="',

client.service.control.tolerance.percentage=0.01

# Required for Roo-based authentication and user information services. All used in CustomerSpecificFunctions.coffee
server.roologin.getUserLink=${client.service.persistence.fullpath}authors/findbyname
server.roologin.changeLink=http://${client.service.persistence.host}:${client.service.persistence.port}/acas/changepassword/update
server.roologin.resetLink=http://${client.service.persistence.host}:${client.service.persistence.port}/acas/forgotpassword/update
server.roologin.loginLink=http://${client.service.persistence.host}:${client.service.persistence.port}/acas/resources/j_spring_security_check
client.roologin.showpasswordchange=true

server.allow.protocol.creation.formats=Generic,Dose Response,Custom Example,Example2,Time Result
server.database.driver=org.postgresql.Driver
server.database.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.database.host=db
server.database.port=5432

#todo move to R stuff?
server.database.r.driver=PostgreSQL()
server.database.r.package=RPostgreSQL
server.database.url=jdbc:postgresql://${server.database.host}:${server.database.port}/${server.database.name}
server.delete.files.on.reload=false
server.projects.type=HardCoded
client.require.login=true

server.service.external.file.type=blueimp
server.service.external.file.service.url=

# options for preferred batchid type are: NewLineSepBulkPost, SeuratCmpdReg, GeneCodeCheckByR, AcasCmpdReg, LabSynchCmpdReg, SingleBatchNameQueryString, AllPass
client.service.external.preferred.batchid.type=NewLineSepBulkPost
server.service.external.preferred.batchid.url=http://tomcat:8080/cmpdreg/api/v1/getPreferredName
server.service.external.preferred.batchid.separator=-
server.service.external.project.url=
server.service.external.report.registration.url=
server.service.external.user.authentication.url=
server.service.external.user.information.url=
server.service.external.logging.url=

# Required if using Spotfire
client.service.spotfire.host=
client.service.spotfire.path=

# Used by custom code for accessing inventory
server.service.external.inventory.database.host=
server.service.external.inventory.database.port=
server.service.external.inventory.database.name=
server.service.external.inventory.database.username=
server.service.external.inventory.database.password=

## options for auth. strategy are: properties, database, ldap
server.security.authstrategy=database
#server.security.properties.path=/opt/seurat/SeuratServer/users.txt


## ACAS Home Page Options
# If module is customized and the ACAS header name needs to be replaced, you can set the following options
client.moduleMenus.logoText=ACAS
client.moduleMenus.homePageMessage=Welcome to ACAS
client.moduleMenus.copyrightMessage=&copy; John McNeil & Company 2012-2017
# If summary statistics is an included feature, set the following to true
client.moduleMenus.summaryStats=false
# For navigation to external ACAS modules from ACAS homepage
client.moduleMenus.modules.external=[{"displayName": "Compound Registration", "href": "/cmpdreg/"},\
                                     {"displayName": "Compound Registration Bulk Loader", "href":"/CmpdRegBulkLoader"}]

client.leaveACASMessage=There are no unsaved changes.
client.scientistCodeOrigin=ACAS authors
client.molecularTargetCodeOrigin=ACAS DDICT

#client.roles.loginRole=ROLE_ACAS-USERS,ROLE_CMPDREG-USERS
#client.roles.cmpdreg.chemistRole=ROLE_CMPDREG-USERS
#client.roles.cmpdreg.adminRole=ROLE_CMPDREG-ADMINS
#client.roles.acas.userRole=ROLE_ACAS-USERS
#client.roles.acas.adminRole=ROLE_ACAS-ADMINS
client.roles.loginRole=
client.roles.cmpdreg.chemistRole=
client.roles.cmpdreg.adminRole=
client.roles.acas.userRole=
client.roles.acas.adminRole=
client.browser.enableSearchAll=true

## Cmpd Reg Bulk Loader Options
client.service.cmpdReg.persistence.host=tomcat
client.service.cmpdReg.persistence.path=cmpdreg/api/v1
client.service.cmpdReg.persistence.fullpath=http://${client.service.cmpdReg.persistence.host}:${client.service.persistence.port}/${client.service.cmpdReg.persistence.path}/
client.service.cmpdReg.persistence.basepath=http://${client.service.cmpdReg.persistence.host}:${client.service.persistence.port}/cmpdreg

# If project select is shown separately in the Configuration part of the GUI
client.cmpdReg.showProjectSelect=true
client.cmpdReg.projectName=ACAS

# Config for whether file date should be shown in the Configuration part of the GUI
client.cmpdReg.showFileDate=true

# Migration notes
# ACAS 1.5 -> 1.6
#
# Module Menu configuration
#
# Navigation to external ACAS modules from ACAS homepage
# Example: client.moduleMenus.modules.external=[{"displayName": "Compound Registration", "href": "http://localhost:8081/cmpdreg"},\
                                     {"displayName": "Seurat", "href": "http://localhost:9080/seurat"}, \
                                     {"displayName": "Compound Registration Bulk Loader", "href": "http://localhost:3000/CmpdRegBulkLoader"}]
#
# Curve fit model configuration
#
#
# Example: client.curvefit.modelfitparameter.classes=[{"code":"4 parameter D-R", "parametersController":"DoseResponseAnalysisParametersController", "parametersClass": "DoseResponseAnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveLL4", "RSource":"public/src/modules/CurveAnalysis/src/server/ll4.R"}, \
#                                                     {"code":"Ki Fit", "parametersController":"DoseResponseKiAnalysisParametersController", "parametersClass": "DoseResponseKiAnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveKi", "RSource":"public/src/modules/CurveAnalysis/src/server/ki.R"}]
#
client.curvefit.modelfitparameter.classes=[{"code":"4 parameter D-R", "parametersController":"DoseResponseAnalysisParametersController", "parametersClass": "DoseResponseAnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveLL4", "RSource":"src/r/CurveAnalysis/ll4.R"}, \
                                            {"code":"Ki Fit", "parametersController":"DoseResponseKiAnalysisParametersController", "parametersClass": "DoseResponseKiAnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveKi", "RSource":"src/r/CurveAnalysis/ki.R"}, \
                                            {"code":"4 parameter D-R IC50", "parametersController":"DoseResponseAnalysisParametersController", "parametersClass": "DoseResponseIC50AnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveLL4IC50", "RSource":"src/r/CurveAnalysis/ll4IC50.R"},\
                                            {"code":"Michaelis-Menten", "parametersController":"DoseResponseKmAnalysisParametersController", "parametersClass": "DoseResponseKmAnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveKm", "RSource":"src/r/CurveAnalysis/mm2.R"},\
                                            {"code":"Substrate Inhibition", "parametersController":"DoseResponseSubstrateInhibitionAnalysisParametersController", "parametersClass": "DoseResponseSubstrateInhibitionAnalysisParameters", "plotCurveClass": "DoseResponsePlotCurveSubstrateInhibition", "RSource":"src/r/CurveAnalysis/substrateInhibition.R"}]

# Lock when approved filter
#
# Experiments which should be locked for editing when status is 'approved'
#
# Example: client.experiment.lockwhenapproved.filter=[{"lsType": "Bio Activity"}]
#
client.experiment.lockwhenapproved.filter=[{"lsType": "Bio Activity"}]

# Protocols and experiments which should be hidden (to non-admin users) in the protocol/expt browser when the status is in the config below
client.entity.hideStatuses=["deleted"]

# client.entity.editingRoles/deletingRoles determine which users can edit/delete protocols/expts. Leave config empty if all users can edit/delete
# use 'entityScientist' if want to restrict privileges to user saved in the scientist value
# Example for restricting editing privs to user in entity's scientist value and users with admin role: client.entity.editingRoles=entityScientist,admin
# client.entity.editingRoles=entityScientist,projectAdmin,admin
# client.entity.deletingRoles=entityScientist,projectAdmin,admin
client.entity.editingRoles=
client.entity.deletingRoles=
#client.entity.viewDeletedRoles=projectAdmin,ROLE_ACAS-ADMINS
client.entity.viewDeletedRoles=

client.protocol.showAssayTreeRule=false
client.experiment.uneditableFileTypes=["source file", "annotation file"]

# If project select is shown separately in the Configuration part of the GUI
client.cmpdReg.showProjectSelect=true

# Default status for experiments loaded thorugh experiment loader
server.sel.experimentStatus=approved
server.sel.protocolStatus=created
server.sel.assayStage=unassigned

# Cron- change to "false" to not start cron jobs on startup
server.service.cron.startOnRestart=true
server.service.cron.enable=true

#TODO: remove later, support both
server.service.genericSpecificPreProcessor=false

# Comma-separated list should contain list of names of dom elements (without '.bv_group') to add hide class to
# Example: client.experiment.hideFields=details,comments
client.protocol.hideFields=
client.experiment.hideFields=

# Experiment status after successful SEL upload
server.sel.experimentStatus=approved


# User role that allows changing protocol and experiment statuses to "Approved" or "Rejected"
client.entity.approvalRole=

client.service.preferred.batchid.path=/api/preferredBatchId
client.service.project.path=/api/projects
client.service.users.path=/api/users
server.file.server.path=privateUploads
server.temp.file.server.path=privateTempFiles
server.service.persistence.jdbc.validation.query=select version()

#Rapache conf file configs
server.rapache.conf.startservers=1
server.rapache.conf.minspareservers=5
server.rapache.conf.maxspareservers=5
server.rapache.conf.serverlimit=5
server.rapache.conf.maxclients=5
server.rapache.conf.maxrequestsperchild=200
server.rapache.conf.serversignature=On
server.rapache.conf.hostnamelookups=On
server.rapache.conf.serveradmin=root@localhost
server.rapache.conf.serversignature=On
server.rapache.conf.logformat='"%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined'
server.rapache.conf.rewriteengine=On

#################### SUPPORT EMAIL ####################

#
# PROPERTY: server.support.smtp.host
#           server.support.smtp.port
#           server.support.smtp.username
#           server.support.smtp.password
#           server.support.smtp.auth
#           server.support.smtp.ssl
#
# EXAMPLE:
#           server.support.smtp.host=smtp.gmail.com
#           server.support.smtp.port=465
#           server.support.smtp.username=brian@mcneilco.com
#           server.support.smtp.password=password
#           server.support.smtp.auth=true
#           server.support.smtp.ssl=true

server.support.smtp.host=localhost
server.support.smtp.port=25
server.support.smtp.username=support@mcneilco.com
server.support.smtp.password=null
server.support.smtp.auth=false
server.support.smtp.tls=false
server.support.smtp.ssl=false

client.basePath=/

server.curveCurator.onRejectMakeReportedValuesNonPublic=false
server.curveRender.drawPointsForRejectedCurve=true

# Restrict experiment search by project
server.service.projects.restrictExperiments=false

flyway.location=db/migration/postgres,com.labsynch.labseer.db.migration.postgres
flyway.schema=acas
flyway.database.username=${server.database.username}
flyway.database.password=${server.database.password}

server.acas.license=/home/runner/build/conf/acas.lic

server.systemTest.runOnStart=${env.RUN_SYSTEM_TEST}


# Required configs for which base entity to use
client.protocol.mainControllerClassName=ProtocolBaseController
client.experiment.mainControllerClassName=ExperimentBaseController

# Behavior without this config set to true is to give all users access to all projects
server.project.roles.enable=false

#Controls whether to try to sync projects list from ACAS to CmpdReg
server.project.sync.cmpdReg=true

client.projectEditor.restrictedCheckbox.show=true
client.projectEditor.isRestricted.default=false

client.roles.crossProjectLoaderRole=ROLE_ACAS-CROSS-PROJECT-LOADER
